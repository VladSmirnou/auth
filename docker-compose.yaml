services: 
  back:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: backend
      dockerfile: ../Dockerfile
    env_file: backend/.env
    ports:
      - "3001:3001"
    command: npm run prod
  front:
    build:
      context: frontend
      dockerfile: ../Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      back:
        condition: service_started
    command: yarn start
  db:
    image: "postgres"
    env_file: backend/.env
    volumes:
      - auth-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:?error} -d ${POSTGRES_DB:?error}"]
      interval: 5s
      retries: 2
      start_period: 10s
      timeout: 5s

volumes:
  auth-db:
